-- launch mongo
C:\mongodb\bin\mongod.exe  --config C:\mongodb\data\db\mongod.cfg

-- try to not lose the best strat in each generation through mutation (keep one pure copy)

-- figure out how to send info from the test to GA to the tester

-- read the wiki on GAs: https://en.wikipedia.org/wiki/Genetic_algorithm

-- first launch mongo with C:\mongodb\bin\mongod.exe  --config C:\mongodb\data\db\mongod.cfg

-- now launch the experiment server in C:\Users\Donal\Documents\Projects\RESEARCH\bikeracing\TeamPursuitModel\TeamPursuitModel\experiment_server
node app.js

-- why don't I move the whole thing onto the node server??

-- how do i serve up a flat html page?

-- foook... i already had a page built for creating settings :-( this is now done twice. but hey.

-- create a new url path for http://127.0.0.1:3003/ga/ and load up the main ga page, no?

-- ok, so moved a lot of files, and renamed stuff, and it now loads from node

-- clean up the js- put it all under a public/js folder

-- ok, so it now serves up the files and seeeems to run the GA

-- now look at getting the settings to port from the GA to the game version

-- create a new route for the game version 

-- ok, can now access and run the original game via http://127.0.0.1:3003/tpgame

-- oh, since everything is on node I can just send the id of the settings in the db long with the instructions?

-- tpgame can then do its own lookup? try try

-- id is not being returned from the db. do i need to add it to the global_settings?

-- how can I add it... don't want to save it in the general settings. 
-- maybe store it in another field? Hidden?

-- bug: if i use one very strong rider it evolves to be the lead rider, but when i watch it in the game it drops the others and laps them, so the time taken is much longer than the GA's version. Must be some difference in the physics again :-(

-- at least fix the GA to keep the best riders

-- fuck, GA is actually very different, I must have changed it a lot... looks at groups in the population. But it is losing the winners as it goes from one generation to the next in some cases. Must fix.

-- note: if instructions or startign order do not change, there's no need to re-run that race

- save this file and commit everything.

-- two main issues right now: putting strong rider on front for too long. ANd GA losing the best strat from popualtion to popualtion.

-- 16th march
-- look at losing-best-strat issue first 
-- record the best strat after running races, then find where it is in the next gen.

-- ok, need to work on how to identify strats and add a few more properties, like the generation, a type, and a variant counter
-- all variant ids are the same? eek. need to set up the id props at the first gen as well

everything in the id is undefined after we run first batch of races. Warum??

-- now they have legit ids from one generation to the next-- need to now look at the groups/tounraments in a generation and see what is happpening there

-- looks like it works ok and the fastest strat is kept

-- BUT!! found example where the starting order of the fastest race is changed! this must be it!

-- also found another one where the time taken jumps by 1- but it looks like the instrucitons are identical and starting_ordet oo, so maybe a rounding issue?

-- ok, so starting_order changes for the whole population hwne it is shuffled, not for a single race... oops

-- right, so thsi reproduces the bug:
a = {id:1,s:[0,1,2]};
b = {};
b.id = 2;
b.s = a.s;
b.s[0] = 5

-- now both a.s[0] and b.s[0] will be 5. when we assign b.s = a.s it is a reference that is stored. then because we shuffle in place and do not return a new array, kerpoom!

-- could look for JS 'deepcopy' and change = line OR return a new array with the shuffle instead of just editing the original?

-- made slight change to the shuffle array. not sure why it goes down through the array and not up. why?

-- need a deep copy. leave shuffle as is (uses less ram?) use Array.from() when we assign start_order

let a = [1,2,3];
let b = Array.from(a);

-- no waits, can use the ES6 b = [...a] syntax :-)

-- what else am I shuffling and does it break?
-- just the new_population i thinks

-- goooood, seems to have fixed that issue.

-- now on to the problem with getting different outcomes in the visual and ga races 

-- so when i run the ga i am getting faster times... in the game version the lead riders are dropping others 

-- will have to switch on the big logging messages setting to see what's goign down.

-- was able to run the logging on the ga end but not the game one

-- settings id is not loaded into the url in the ga results 

-- ah, when i update settings it doesn't display the id <span>

-- fixed... update relies with data.value.name etc. 

-- now need to change so that the logging is NOT done when running the GA itself... 

-- bah, getting the error Uncaught (in promise) TypeError: Assignment to constant variable. seems you can't mod anything that comes in from an export, so I have to assigne those to local vars instead

-- enough for today... fixed one bug, now need to retest the game, currenlty it does seem to displat intstructions but...
-- looks like the start_order is NOT being used now when i load settings via url- makes sense as it ALSO gets a start order from the settings and needs to make sure the url one is taken 

-- also, fatigue dispaly looks suspicious, will need to look into wy it is 5/5 for the strong rider.

-- wednesday 18th, day after P day. do one hour. also, do diary today. and get outside.

-- created a new batch script to launch things quicker, now have START_TPURSUIT_APP.bat on the desktop to start mongo, node and chrome

-- now try to change how settings are applied... basic problem=url start_order loaded, then db settings loaded that overwrite this.. split things up.
-- 1, get id
-- 2, load db settings
-- 3, add start_order and instructions from url

-- done BUT looks like the order is not used :-( will need to dig more. first switch off the logging to speedo speedo.

-- balls, fixed some more BUT time still off... are the instructions being run? 

-- ignores first two instrucitons??

-- ok, it gets the instruction but the rider doesn't drop back... a rider is supposed to drop back only in certain track areas so the IF for this may be failing? will continue later, my hour is done and wellll done.

-- -- monday april 6th
-- to get back into it, add a vertical slider on the game page to adjust the SPEED of the game, i.e. the wait between moves... maybe in notches, 0-1 second

-- 1 = slowest, maybe 1000
-- 10 = quickest, maybe 1
-- slider provides 1 - 10
-- so what formula? (10-x)*100?

-- first attempt, 200 is way too slow, need to rejig and shrink everything a bit. linear from 0 to 1000
-- ok, so new formula is simply (10-x)*60. defaulted to 120. works ol. commit to git then
-- done, a/G_6

-- try to make the GA page a 3 column design as opposed to just 1
-- put rows and cols into the GA page
-- add tooltop text to the table
--fuckkk... massive problems caused by <script src = "js/ga.js" type="module"></script>
-- why was type="module" included? still seems to work without it and fixes painful funciton not defined bug

-- ok, added column names, and also added a double-click event that updates the single race settings

--robustness check not working
-- page looks much neater: do the same for the race page itself.

-- tuesday April 7th., home. coronatime

-- first get the robustness going. was throwing an error.

-- ui. when you double-click an id, have note saying 'generation 23 best race loaded'

-- done, beter comment, robustness works, also added id to results.

-- remove the unused info from the end of the results table

-- move to the game view and start improving
-- add bootstrap row/cols 

-- stuff won't fit, need to move things about

-- ok, better now, need to look ahead

-- aim is to have d3.js drawring a bunch of different graphs... need to be able to get the data to d3
-- could look at
-- 1: returning the data from the worker as pure json
-- 2: parsing that json, i.e. doing the display code on the front JS
-- 3: saving that results json to mongo
-- 4: adding enough info when saving to be able to list and retrive again, such that it is somewhat replicable, e.g. all settings used 
-- 5: having another page accessed from the panel that would allow me to go through the results and start building graphs for the data
-- first graph: fitness from generation to generation (simple line)
-- need to be able to save/export the graph as jpen/png
-- as usual commit to git

-- wednesday april 8th.

-- so far a shit day for productivity. pure muck. and already 5PM 5PM that's fuckign crazy

-- changed bat file to also load this file.

-- work on saving results to mongo after running a 'test'.
-- need to save the date_time plus all of the settings used... 
-- added a button but big change needed to save results: need to return the results as a JSON array, not as HTML, dameet.

-- Thursday. work until 3 at getting json results and then trying to save them
-- now returns json but have to put the table drawring code in

-- ok, results now show and are available as json. SO i now can look at storing them
-- add a date_time to the results (maybe start time and end_time?

-- ok, the damn things now save
-- add a message tot he front end to say it has saved
--oh, forgot to add the notes field: what other user input might be needed?

-- notes added, awkward to get the joi to work, not yet returning the _id and printing 'new results added'

-- Friday April 10th
-- spend a good hour at it right now to try and make progress
-- results ARE saving but no way to view them 
-- first test saving again and make sure the messages are ok

-- ok result is back. notes are not being saved...
-- was missing a line in app.js. they are saving now

-- add a new page to look at results... will need a way to search for them?
-- first, list all
-- make a menu for the three pages, make the whole thing like a site

-- why do I have to use results.html but can just do ga and not ga.html?

-- long break. now have a menu bar and a 5 pages. need to add content but go look at the results

-- add a new JS file for this

-- aim 1: display a table with results.

-- need to add a date created to the results (not the ga results inside?)

-- draws simple list of result names.... date_created is not being saved. What columns do I need to include?

-- MOnday 13th. fuck already too alte. ah jeez

-- need to get data: generation and fitness of best race.
-- be able to select a result: return all data
-- then have a dropdown to select a graph to draw 
-- first graph = best race fitness per generation line graph
-- a thi8s stage will need D3.js

-- added button that calls load_results() 
-- need a new fetch and rest endpoint

-- now loading data for results using id
-- can use the same funciton as in the ga page to show the results but also need to load all other details?

-- yay, got first graph to appear, best race time per generation. looks mud but better than 0

-- shit, get a payload too large error if i try to save it for 200 generations

-- tuesday. home of course. get a better grip on d3 and learn how to save them as images

-- seems to bean npm package for saving them

-- https://github.com/exupero/saveSvgAsPng

-- npm install save-svg-as-png

-- ok, had to muck a bit but can now save them. hurrah.

-- now make the file name generation more smart: have the graph name and the results id and the date/time in there?

-- done, graph name, results id, and datetime added.

-- added x.y labels and colour legend

-- need to add another graph... what other figures are interesting?

-- runnign more ga's and they all seem so.. similar. dumb even. What am I trying to show again?

-- bug 1: make all riders normal. best score can get slower by a second after X generations. why?

-- bug 2: wrong settigns id stored. I think this happens if I adjust an existing set and save them as new: it doesn't updated the selected settings id.

-- fixed bug 2, i think. set the settings id after adding new settings.

-- try to hit bug 1 again

-- try running same setup 5 times and compare the final instruction sets

-- thursday, i think, april 30th

-- need to email COlm. What's the least I can do for now to get the ball rolling? 

-- restart the tests for basic conditions, send on screenshots and graphs?

-- also load up overleaf and write up another section of that 'paper'

-- need to work on a video

-- need to add more graphs- UI looks fine

-- monday 4th. of may. fuck. just get the ball at least rolling. make a second graph showing somethign dumb.

-- change the draw_graph function to make it more general, i.e. so that it can qctually draw different graphs rather than copyint/pasting it with tiny changes

-- each graph: title, x_label, y_label, line_label_1, x_data_1, y_data_1, line_label_2, x_data_2, y_data_2... second set of data optional

-- yikes, that sucked, too much work, need to now add a second LINE graph.
-- can use  FALL-THROUGH in the switch case statement 

-- idea: average length of instructions + average instructions to added race per generation  
call this graph Change in Instructions

-- second graph now 'exists' but looks poo

-- need a Clear Canvas button

-- added button. now get graph 2 to work a little better. title of graph 1 not drawn

-- bisschen besser, now add a third line to the second one, for instrucitons removed. will need to make sure that this covers ALL instrucitons and not just effort or drop ones

-- actually, add two more lines: one for the avg. # of effort instructions, one for avg. # instrucitons removed.

-- ok, do another quick graph on the number of variants in each generation

-- one final test before dinner: can I actually add crossover back in? Does it crash it? If not, does it add new variants as time goes by?

-- ok so crossover is NOT being applied in this new_population_tournament_selection() approach. could add it?

-- tuesday 5th.

-- 1: read emails about grc

-- ok so have to upload 1) your short (~10min) video (.mp4) and 2) your presentation slides (.pdf or .pptx). to https://drive.google.com/drive/folders/131jgcF_VbkFCKRNFqCA5OKF291TIAFOi?usp=sharing

-- that's only 3 days including today. need to wrap up as much as possible today

-- My GRC with Sam Redfern, John Newell, and Pilib, is on for May 14th 09:30-10. I need to make contact with all three (CC) beforehand to share contact details. Need to send these the 'annual student report' as well, for/about which I need to email Colm.

-- where are GAs used?

-- optimisation problems
-- e.g. bank loan decisions https://www.sciencedirect.com/science/article/pii/S0957417417301677?casa_token=J_urCRXu6ioAAAAA:t2x-HW2zgq4TzPhbCIJP0C14Sgta5O00TAVnd_EnBjQYce0UAT4sdUcVOkIlSvzsuYlq3oc6

-- or airline crew pairing https://arxiv.org/pdf/2003.03792.pdf

-- or task allocation in multicomputers https://laur.lau.edu.lb:8443/xmlui/handle/10725/7957

-- Solving matrix game with rough payoffs using genetic algorithm   https://www.researchgate.net/profile/Sankar_Roy/publication/282545132_Solving_matrix_game_with_rough_payoffs_using_genetic_algorithm/links/5804b26b08ae293d3680c679/Solving-matrix-game-with-rough-payoffs-using-genetic-algorithm.pdf

-- wednesday may 6th.lotssss to do.

-- find last years slides and make a copy

-- done, needs a lot of labour

-- look at getting crossover to run in the new_population_tournament_selection() option.

-- variant IDs of crossover strats are wayyyy too long: the parent ids are combined... this gradually gets longer and longer

-- need to create variant ids that can be used to trace lineage (if needed) but don't keep elongating

-- gen 1: ids 1, 2, 3,4,etc
-- gen 2: ids 1_2,1_3,3_4, etc
-- gen 3: ids 1_2_1_3, 3_4_7_9, etc

change to
-- gen 1: ids 1, 2, 3,4,etc
-- gen 2: ids 1_2|G2I0,1_3|G2I1,3_4|G2I2, etc
-- gen 3: ids G2I0_G2I1|G3I0, etc... this is as long as the variant ids can get and technically you can trace lineage


-- try OBS software for screen capture... don't want to use screencast-o-matic

--ok, shorter variant ids, BUT undefined_undefined_undefined is appearing at the end. how is this being appended again?

-- seems to work now... but with crossover it does find a good solution, just as fast as the mutation. eeeek.

-- variants count stays HIGH and fluctuates a lot with crossover... need to know HOW much crossover is happening per generation, i.e. a new graph, and check to see if it all makes sense.

-- first, add more feedback in the results page when a results set is loaded: can't tell which one was just loaded. Need to see the name over where the graphs are, or even better as titles under each graph

-- also add a bit more info here, like the number of generations, the population size, and the date it was run 

-- ok, seeeems to look a bit better

-- now hide the results table in an accordian container to provide more space for the graphing

-- better... commit to git.

-- now, add another graph showing the number of crossover vs mutant members of a population 
-- done: might be more interesting to show more about the composition of a generation, i.e. new crossover, new mutants, total crossover, total mutants 

-- also, extend the graph width as text is truncated...

-- do ai need that daft square root populaiton error anymore?

-- add a new global setting: ga_run_robustness_check
-- if this is set to 1, for each generation, take the BEST strategy and run the robustness check some number of times
-- use anothe rglobal variable to control this, ga_run_robustness_check_number_of_mutants:100

-- oops, already have this last setting, called robustness_check_population_size
=
-- note, the ga_tournament_selection_group_size setting was set to 3, which seems too small. Try 7

-- robsutness averagr seems to be too high- always seems to score badly... but... it is an average, so should also track the BEST and WORST to see if better ones are sometimes found

-- after, look at counting the number of direct copies and mutations done at each generation. could express as a % so that the y axis can just be 100.

-- works, though worst robustness is VERY HIGH, can't even see the BEST one thanks to the daft scale

-- right, now shows mutants/crossover/direct being added per generation. Can't tell from which set the better times are coing but that would take effort I think. 

-- ideally would have at least one non-line graph.

-- need slides/script and test of screen capturing

-- Thursday 7th. have to upload slides and video today. big effort needed.

-- first, set up and run a sequence of more consistent tests with
-- all normal
-- 1 strong 
-- 2 strong 
-- 3 strong 
-- all strong

-- keep all other settings the same. #

-- with all strong there is an inconsistent result, when I run the final strat on the visualiser a 2nd rider gets dropped and the time is slower :-( 

-- run it again and see if it finds the same problem: does it happen if I run it from the GA page non-vis?

-- second run doesn't have this problem- final time is a little slower... will need to investigate further but not now, for reference the problem is the final strategy in results 5eb3f07e49a604007c07cc5d | T1_THREE_STRONG

-- now back to the slides/video

-- ok, time to give the video a go 

-- Monday 11th...

-- have to prep for the GRC. Need to email them about how to share.
-- need to write at least some form of paper 
-- need to fix more bugs: issue with inconsistent time (above) and issue with worst case race being massive. is it legit?

-- Thursday 14th.
-- clean up and reorganise the file structure: will need to make sure the research flder is BACKED UP. main code is on GIT but would still be a pain to recover the rest of it.
-- grc. eek. 09:30-10 or so.

--idea: based on the Kevin Norton 2014 paper, have the visual model output each rider's power as a graph, or, even save it then be able to generate the graph after. Compare this with what is being found in that paper. Then, aim to get the settings/model closer to its general findings about the team pursuit and track racing in general.

-- let's make a basic app for saving references? can store notes and findings about papers and get it to generate the refs in different formats. ideally it would be able to store and display the papers themselves so you could 'upload' them into it.

-- datacamp access to do courses via NUIG that might give me credits

-- grc meetign notes. present, me, Sam Redfern, JOhn Newell, Pilib O' Broin.

-- issues to note: I have to get on top of the box-ticking parts of the structured phd program, i.e. accumulate all the module points that are needed.

-- I will have to be able to defend my work in the space of genetic algorithms research. This is most likely the 'home' for my work. IN this regard I need to do a ton of reading and study.

-- I need to finsih paper 1 and find references to add to it. 

-- think about this time next year- what would be the minimum requirements for getting through? minimum is two papers at least plus a bunuch more directions explored.

-- So, will need to start reading much more systematically

-- save power info for each rider in each race: then save this for the fastest race for each ga generation
-- create a graph that can be run for each generation that draws the power outputs for each of the 4 riders.

-- tuesday may 26th.

-- look at outputting and graphing the power of riders...

-- is javaScript pass by value or reference? https://stackoverflow.com/questions/518000/is-javascript-a-pass-by-reference-or-pass-by-value-language

--so, I cannot just set the power values as an attribute of the object (race_r) passed in... I have to return them. Now, I already return the time_taken... this means I needs to change this and return an object containing both time-taken AND rider_power??

"It's always pass by value, but for objects the value of the variable is a reference. Because of this, when you pass an object and change its members, those changes persist outside of the function. This makes it look like pass by reference. But if you actually change the value of the object variable you will see that the change does not persist, proving it's really pass by value."

-- so, return a more complex object like {time_taken: 123, power_output:[[100,200],[200,220]]} 

-- ok, so output now gets returned from the ga for each generation best race, and it gets saved to the db

-- next step is to draw it... can't put it in the main graph dropdown as the data is there for every generation
-- so add a new button/link to each line in the data results? "Power Graph" ?

-- cool, have power graph for all 4 riders... looks wrong tho, why is rider[0] all-powerful?
-- is data[0] storing the power of the rider on the front? must be... 
-- yup, looks dodge, can store power separate for each rider then bung em into the results ofter?
-- wait, can I not jsut use [race_r.current_order[i]] instead of just [i]?

-- Thursday 28th

-- added a new fatigue formula... old one was a bit bonkers
-- do i also need to look at the recovery?? same thing right?

-- changed recovery formula to include a global property like with the fatigue.

-- June 02

-- read, or at least scan, Alex's paper.

--line 61 "to be a 1000;" should "be to be 1000;"?

-- line 87 "The a nodes, a' and b nodes" should be The a, a', and b nodes OR The a nodes, a' nodes, and b nodes?

-- line 180/181: (the largest minimum value of a from a solution 181 was a=12445). The 3 a's make this a bit confusing... could the variable name a be in bold?

-- 199/200 making it so that all cooperators will revert to being defectors. Maybe " which results in all cooperators eventually becoming defectors"?


-- done. basic idea is a particular graph topology that defines a few types of nodes joined by key nodes that ensure that if all nodes start with stragey A, then perturbing one node to stratgey B will eventually return back to all A. These are known as 'resiliant' graphs. Seems well written though not massively readable- but that's academic writing for ya

-- try to get weak rider to be dropped
-- bug on line 275

-- how do i check if an object has a property or exists again?
-- use typeof... if it returns undefined then there's a problem
-- spit out console info if typeof is undefined
-- use JSON.stringify() to log the object

-- doesn't include data for power for last generation... but only for this run... works for other experiments

-- MOnday June 8th. Jeepurs I've done nothing. Need to work on the paper and actually write shit.

-- is there any way I could change how the power is used so that a more accurate start can be modelled. In my version I simply limit the power being output at any timestep, and it can rise or fall at a certain rate, while in reality there is a more instantaneous power. 

-- Also, it seems that general strategies would be to put out a lot of power early on to get-up-to-speed. 

-- Was I not intending to have TWO energy systems, not wholly independent but yet somewhat, basiclaly the sprint and the aerobic?

-- Also need to see if I can access the NUIG intranet to get papers.

-- you will be reduced. you will be... ah hells.

-- monday june 15th.
-- try to get crossover to use some random length between the length of the two parents...

-- ok, so worked on the length of crossover children...this is now done in two steps
-- 1, get random number in range betwen parent sizes (inclusive)
-- 2: adjust this in some cases in range (-3,+3) with decreasing probability of size. 
-- E.g. chance of 0 = 0.5, chance of 1 or -1 = 0.5, chance of 2 or -2 = 0.25, chance of 3 or +3 = 0.125
-- make this 0.5 a global setting that defaults to 0.5?
-- "ga_crossover_length_adjustment_probability":0.5

-- ok, it vurks 

-- shuld it not (probabilistically) mutate also AFTER crossover??

-- add another param and test what happens if crossover is the dominant method?

- tuesday 16th BLOOMSDAY 2020
-- need to start writing on Overleaf- meeting with COlm in one hour

-- add a reference to the witley paper, maybe write it yourself to get to grips with the format?
-- Whitley, D. A genetic algorithm tutorial. Stat Comput 4, 65–85 (1994). https://doi.org/10.1007/BF00175354

-- there's a more recent Whitley work too. Whitley, D. (2001). An overview of evolutionary algorithms: practical issues and common pitfalls. Information and software technology, 43(14), 817-831. https://www.sciencedirect.com/science/article/pii/S0950584901001884?casa_token=EZ6sKJq50YcAAAAA:b8yHRoERz6a1bUB57_wSmpPww1RInjlwCwyvktxyqSmj1GFbjHnLCLPEGpgrCMw7XU8konp92Q

-- added paragraphs in a few sections. struggled with Latex. some progress tho

-- wednesdayy 17th. bloomsday uncelebrated. another un gun

-- results from most recent tests are odd. may

-- wednesday 24th. fuck. did nothing. spent ages looking at reinforcement learning but don't understand that either.

-- at least add anew graph of the ordered race result/fitness for each gen.

-- added this graph. looks like in every gen there are a low number of real outliers that take ages... would need to know what is going on with these strategies, can take thousands of seconds to complete the race...

-- dursday 25th june 2020
-- save instructions of WORST race in each generation
-- aved worst and found a fukking BUG! If you set a low power and keep doing drop instructions, the power gets halved each time, so the rider goes slower and slower. When a rider takes over at the front they are supposed to MATCH the speed, not reduce it

-- seems to be HALVING the power when assuming the lead! balls. This will have a huge effect on the race. How to debug? Need to look at what happens when a rider drops back

-- technically when a rider takes over the lead, it is the speed  they want to match and not the power? E.g. that rider might be much heavier and so need to produce more power for the same speed?

-- looks like the issue is in here mapPowerToEffort(settings.threshold_power_effort_level, current_leader_power, new_leader.threshold_power, new_leader.max_power)

-- i improved the mapping of effort to power but did NOT update this reverse function. why does it end up being exactly half though?

3 parts to this: mapPowerToEffort
UNDER threshold
  effort_level = ((rider_power*threshold_effort_level)/rider_threshold)
 AT threshold
 effort_level = threshold_effort_level;
OVER threshold
  effort_level = ((rider_power - rider_threshold )*(9-threshold_effort_level))/(rider_max - rider_threshold) + threshold_effort_level;
  
 I need to compare these with the three ways to do the opposite (middle should be same same)
 mapEffortToPower
UNDER threshold
power_from_effort = rider_threshold*(rider_effort)/10;
AT threshold
  power_from_effort = rider_threshold;
OVER threshold
power_from_effort = rider_threshold + (rider_max - rider_threshold)  * ((rider_effort-threshold_effort_level)/(9-threshold_effort_level));

need to do these up in Excel to ensure they are all allez korrekt
-- friyay 26th

=(IF(C15<$B$5,($B$7*(C15/10)),IF(C15=$B$5,$B$7,($B$7+($B$3-$B$7)*((C15-$B$5)/(9-($B$5)))))))

-- initial findings: formula is 'ok' BUT not linear. need to graph and rebuild... but first determine the source of the BUG
-- must be in the mapPowerToEffort funciton
-- write a test for this in the JS, that copies this Excel data. YOu shoudl get the same values, and then ALSO convert back into effort from power...

-- done,and it looks bad for lower values. check compare these two:
e to p: rider_threshold*(rider_effort)/10
p to e: ((rider_power*threshold_effort_level)/rider_threshold)

-- yup, looks odd. first is linear as though we were using rider effort of 0 to 10. Are we not using 0 to 9? Does this matter?
-- ANd in any case, the second is based on a linear from 0 to the threshold level, i.e. 6. These do NOT match up. Two different forms. Need to graph both then test then choose best then test again.

-- added graph... bug looks pretty obvious now, big kink in slope as effort approached threshold level 6
-- add formula for p to e

=(IF(D4<$B$8,(D4*$B$6/$B$8),IF(D4=$B$8,$B$6,$B$6+((D4-$B$8)*(9-$B$6)/($B$4-$B$8)))))
-- ok can now SEE the error. add a version for the corrected power formula
=(IF(E4<$B$8,(E4*$B$6/$B$8),IF(E4=$B$8,$B$6,$B$6+((E4-$B$8)*(9-$B$6)/($B$4-$B$8)))))

-- yup, this 'fixes' it though the graph is odd. Fix it, check the tests in JS that they match, then run some GAs and look at the worst performers.
-- note, also need fix in the game version

-- IMPROVEMENT; worst race perofrmance is now MUCH better, doesn't get stuck in that slowening grip

-- note, key lines related to the fatigue
  if(race_rider.endurance_fatigue_level >= failure_level){
        race_rider.output_level = (settings.threshold_power_effort_level-settings.recovery_effort_level_reduction);
      }
-- noticing that the worst races simply set a very low effort. makes sense I guess. If riders go too hard they still finish with an ok time, but I can tweak that by increasing recovery_effort_level_reduction?

-- was set to 1. Try setting it to 3 and run the same ga

-- now try a crazy high punishment, like set them to effort of < 1, so recovery_effort_level_reduction = 5.5

-- oops. threshold_power_effort_level is set to 5 not 6. why? How does this affect the graphs?

-- monday june 29 2020. later than ya think

-- so, the power-to-effort and effort-to-power should now by symmetric. what next?

-- do i want a steeper curve mapping effort to power when above  Surely, 5, which has very little change, is ideal?

-- this does mean that instructions are VERY rider-dependent... curve changes... but of course it is rider-dependent.

-- now, the question is... should I not be trying to match the SPEED and not the POWER... but this might not be as hard as I fear?
-- Let's say I know the target speed... how do I work out the power that a different rider needs to put out to match it?

-- it should be an easier calc right?

-- note, this will only have an affect if a rider has a different weight/frontal area?

-- need to translate speed to power to effort level when a rider takes the lead... assume transition from shelter to non-shelter is instantaneous 

key lines from http://bikecalculator.com/

if(!calcMode) {	// we calculate velocity from power when calcMode = 0
			powerv = eval(power.value);
			
			v = newton(A2, headwindv, tres, transv, powerv) * 3.6;      // convert to km/h
			if (v > 0.0) t = 60.0* distancev / v;
				else t = 0.0;  // don't want any div by zero errors
			
			velocity.value = makeDecimal2(v * (units ? 0.6214 : 1.0) );
			
		} else {  // we calculate power from velocity
			v = eval(velocity.value) / 3.6 * (units ? 1.609 : 1.0);  // converted to m/s;
			tv = v + headwindv; 
			var A2Eff = (tv > 0.0) ? A2 : -A2; // wind in face, must reverse effect
			powerv = (v * tres + v * tv * tv * A2Eff) / transv;
			
			if (v > 0.0) t = 16.6667 * distancev / v;  // v is m/s here, t is in minutes
			else t = 0.0;  // don't want any div by zero errors

			power.value = makeDecimal0(powerv);
			dragSlider.setValue(powerv/500.0);
		}
make a new funciton called power_from_velocity()

-- ok, basic draft version created, now need to call this with the right params, and form where exactly?

-- ok, it seems to do something! But it looks like the velocity is ALREADY in m/s

-- note, to convert from km/h to m/s, you DIVIDE BY 3.6, i.e. multiply by (1000m/3600s)

--ok, removed conversion in function and it now seems to return a legit power, though it has many digits
-- do i needs to do rounding?

-- need to go back over how the sheltering is done :-( 

-- initial test fails- speed is LOWER after switch when done step by step... should be identical

-- hmmm, much bugs... the final velocity DOES seem very very close to the initial velocity BUT it is too slow
-- is the initial velocity wrong? Could I use the rider's OWN velocity but make sure that it is losing the aero savings? 

-- why would the velocity of the old leader be too slow? perhaps they have already started slowign down?

-- ok, so it seems that the SHELTER is being taken into account when working out the power needed to match the velocity... so we need to make sure that we use a non-sheltered value here
ace_rider.aero_A2 = Math.round((race_rider.aero_A2 - race_rider.aero_A2*(shelter_effect_strength*level_of_shelter))*10000)/10000;
-- which we are re-calculating at every step
  race_rider.aero_A2 = Math.round((0.5 * settings.frontalArea * race_rider.aero_density)*10000)/10000;
  
  -- hmmm maybe just recalcualte this... plus frontalArea should be a rider setting not a global?
  
  -- ok, this seems to work. but the whole process seems fierce fragile
  
  -- in any cases, copy these changes to the GA race and see if a ga will run.
  
  -- there is defo too much of a DIP in speed during a switch. This may cause GA's to avoid switching? Seems like the whole physics model used is meh. Acceleration not good enough: riders could increase power faster? But power should be a level seperatd from speed? power can increase much quicker than speed? And they have momentum so keeping a speed is easier. That transition to the lead is important. HIgh cost will punich changes.
  
  -- watched women's race from 2012 olympics... they change on every lap. my whole model is a joke.
  
  -- but let's tweak the fatigue/recovery to see if more swithces emerge?
  -- fatigue set with
    let fatigue_rise = race_rider.fatigue_rate*Math.pow(( (race_rider.power_out- race_rider.threshold_power)/(race_rider.max_power-race_rider.threshold_power)),settings_r.fatigue_power_rate);
	
	let's do up an exel sheet to look at different values of fatigue_rate and fatigue_power_rate? oh wait, this is what I had already done :-) 
	
	ok, attempt 1 with linear fatige is v. high- ga finds no improvements.
	
	-- tuesday june 30th LAST LAST LAST fukk
	
	-- ned to do a couple of hours of writing today
	
	-- where was i? Ran some tests varying the fatigue/recovery, now need to get past that
	
	-- fukk. test 5efa00620fe486250c87d434  gen 28, ga says time 252 but if I play race I get 277 :-( :-( these fukking errors will never go away.
	
	fatigue 10 recovery 20 for all riders
	
	start order: [1,2,0,3]
	[[19,"effort=6.72"],[39,"drop=2"],[61,"drop=2"],[96,"drop=1"],[143,"effort=7.75"],[148,"drop=2"],[172,"drop=3"],[187,"effort=8.05"],[206,"effort=2.4699999999999998"],[209,"effort=9.57"],[227,"effort=6.2"],[232,"effort=8.17"]]
	
	ok, phew, figured this out! the play race pulls the settings from the db and since doing it I changed those fatigue/recovery, so it is no longer identical... meaning things are not as 'repeatable' as I thought?
	
	-- no, it does look like i am saving the settings with each result, but I must be loading them wrong? I need to send the id of the results, not the settings, when trying to run a game FROM THE RESULTS BUT NOT FROM THE GA: so there are TWO ways not one. SO I need to send extra information to say RUNNING FROM RESULTS PAGE 
	--easy to code so do it.
	-- in results JS added source=results to args sent. also changed id from settings_it to results_id
	-- add source=ga to ga JS
	-- done, now add a big IF in the part in game where settings be loaded
	
	-- ok, not tooo bad, seems to work ok, same times when running from ga or results page
	
	-- now need to find settings that somewhat mimic the fast switching of a real race--- lots of fatigue?
	-- maybe there are not enough instructions involved? 
	
	-- try tweaking
	"ga_probability_of_instruction_per_timestep_lower":0.01,
	"ga_probability_of_instruction_per_timestep_upper":0.03,
		"ga_probability_of_drop_instruction":0.5,
		"ga_p_crossover":0.2,
		"ga_p_shuffle_start":0.001,
		"ga_p_add_instruction":0.006,
	"ga_p_delete_instruction":0.16,
	"ga_p_change_effort":0.012,
	"ga_p_change_drop":0.012,
	"ga_p_move_instruction":0.012,
	"ga_range_to_move_instruction":10,
	"ga_range_to_change_effort":2,
	to
	"ga_probability_of_instruction_per_timestep_lower":0.02,
	"ga_probability_of_instruction_per_timestep_upper":0.04,
		"ga_probability_of_drop_instruction":0.6,
		"ga_p_crossover":0.3,
	"ga_p_shuffle_start":0.002,
	"ga_p_add_instruction":0.009,
	"ga_p_delete_instruction":0.2,
	"ga_p_change_effort":0.015,
	"ga_p_change_drop":0.015,
	"ga_p_move_instruction":0.015,
	"ga_range_to_move_instruction":12,
	"ga_range_to_change_effort":2.5,
	
-- damm, crashing when i try to run 100 gens, seems to run some number of gens then go awol
-- looks like an infiloop? fan starts up, stuck on gen 21/100, jumped to code but inside a seemingly innocuous FOR loop
